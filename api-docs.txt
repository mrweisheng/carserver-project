# 汽车信息服务器 API 文档

## 📋 基础信息
- **基础URL**: http://localhost:3000
- **认证方式**: JWT Bearer Token
- **响应格式**: JSON
- **字符编码**: UTF-8

## 🔐 用户认证 API

### 1. 获取验证码
- **接口**: `GET /api/captcha`
- **描述**: 获取图形验证码（用于注册和敏感操作）
- **请求参数**: 无
- **响应示例**:
```json
{
  "code": 200,
  "message": "验证码生成成功",
  "data": {
    "captchaId": "abc123",
    "image": "data:image/svg+xml;base64,..."
  }
}
```
- **说明**: 验证码为4位数字，有效期5分钟，最多尝试3次

### 2. 用户注册
- **接口**: `POST /api/auth/register`
- **描述**: 用户注册
- **请求参数**:
  - `username`: 字符串，必填，3-50个字符，只能包含字母、数字、下划线和中文
  - `password`: 字符串，必填，至少6个字符
  - `real_name`: 字符串，必填，1-50个字符，联络人姓名
  - `email`: 字符串，可选，邮箱格式，客户信息
  - `gender`: 字符串，必填，male/female/other
  - `phone`: 字符串，必填，手机号格式（支持中国大陆11位手机号和香港8位手机号）
  - `captcha`: 字符串，必填，4位数字验证码
  - `captchaId`: 字符串，必填，验证码ID
- **响应**: 用户信息和JWT令牌
- **错误码**: 400(参数错误/用户名已存在/邮箱已存在/验证码错误), 500(服务器错误)

### 3. 用户登录
- **接口**: `POST /api/auth/login`
- **描述**: 用户登录
- **请求参数**:
  - `username`: 字符串，必填，用户名
  - `password`: 字符串，必填，密码
  - `captcha`: 字符串，可选，4位数字验证码（当系统检测到可疑行为时）
  - `captchaId`: 字符串，可选，验证码ID
- **响应**: 用户信息和JWT令牌
- **错误码**: 400(参数错误), 401(用户名或密码错误), 403(账户被禁用), 500(服务器错误)

### 4. 获取当前用户信息
- **接口**: `GET /api/auth/me`
- **描述**: 获取当前登录用户信息
- **请求头**: `Authorization: Bearer <token>`
- **响应**: 用户信息
- **错误码**: 401(未授权), 404(用户不存在), 500(服务器错误)

### 5. 用户登出
- **接口**: `POST /api/auth/logout`
- **描述**: 用户登出
- **请求头**: `Authorization: Bearer <token>`
- **响应**: 成功消息
- **错误码**: 401(未授权), 500(服务器错误)

## 🚗 车辆信息 API

### 1. 获取车辆列表
- **接口**: `GET /api/vehicles`
- **描述**: 获取车辆列表，支持分页和基础筛选
- **请求参数**:
  - `page`: 页码，默认1
  - `limit`: 每页数量，默认20
  - `vehicle_type`: 车辆类型（1=私家车, 2=客货车, 3=货车, 4=电单车, 5=经典车）
  - `vehicle_status`: 车辆状态（1=未售, 2=已售）
  - `car_brand`: 品牌查询，支持两种模式：
    - 模糊匹配：`丰田` (匹配包含"丰田"的品牌)
    - 精确匹配：`exact:丰田` (精确匹配"丰田"品牌)
  - `car_model`: 车型查询，支持两种模式：
    - 模糊匹配：`卡罗拉` (匹配包含"卡罗拉"的车型)
    - 精确匹配：`exact:卡罗拉` (精确匹配"卡罗拉"车型)
  - `year`: 年份查询，支持多种模式：
    - 精确匹配：`2016` (匹配包含2016的年份)
    - 范围查询：`2016-2018` (查询2016到2018年之间的车辆)
    - 比较查询：`>2016`, `>=2016`, `<2018`, `<=2018` (查询大于/小于指定年份的车辆)
  - `min_price`: 最低价格（数字，基于current_price字段）
  - `max_price`: 最高价格（数字，基于current_price字段）
  - `sort_by`: 排序字段（created_at, updated_at, current_price, year）
  - `sort_order`: 排序方向（ASC, DESC）
- **请求头**: `Authorization: Bearer <token>` (可选，用于获取完整手机号)
- **响应数据**:
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": {
      "vehicles": [
        {
          "id": 1,
          "vehicle_id": "ABC123",
          "vehicle_type": 1,
          "vehicle_status": 1,
          "car_brand": "丰田",
          "car_model": "凯美瑞",
          "year": "2020",
          "fuel_type": "汽油",
          "seats": "5",
          "engine_volume": "2.5L",
          "transmission": "自动",
          "description": "车况良好，一手车",
          "price": "25万",
          "current_price": 250000.00,
          "original_price": 280000.00,
          "contact_name": "张先生",
          "phone_number": "13******00",
          "created_at": "2024-01-01T00:00:00.000Z",
          "images": [
            {
              "id": 1,
              "image_url": "https://example.com/car1.jpg",
              "image_order": 0
            },
            {
              "id": 2,
              "image_url": "https://example.com/car1_2.jpg",
              "image_order": 1
            }
          ]
        }
      ],
      "pagination": {
        "current_page": 1,
        "total_pages": 10,
        "total_count": 200,
        "limit": 5,
        "has_next": true,
        "has_prev": false
      }
    }
  }
  ```
- **响应字段说明**:
  - `vehicles`: 车辆数组
    - `id`: 数据库自增ID
    - `vehicle_id`: 车辆编号（网站原始编号）
    - `vehicle_type`: 车辆类型（1-5）
    - `vehicle_status`: 车辆状态（1=未售, 2=已售）
    - `car_brand`: 车厂品牌
    - `car_model`: 车型型号
    - `year`: 年份
    - `fuel_type`: 燃料类型
    - `seats`: 座位数
    - `engine_volume`: 发动机容积
    - `transmission`: 传动方式
    - `description`: 车辆描述
    - `price`: 售价（字符串格式）
    - `current_price`: 现价（数字格式）
    - `original_price`: 原价（数字格式，可能为空）
    - `contact_name`: 联系人姓名
    - `phone_number`: 联系电话（根据登录状态脱敏）
    - `created_at`: 创建时间
    - `images`: 图片数组，按顺序排列
  - `pagination`: 分页信息
    - `current_page`: 当前页码
    - `total_pages`: 总页数
    - `total_count`: 总记录数
    - `limit`: 每页数量
    - `has_next`: 是否有下一页
    - `has_prev`: 是否有上一页
- **隐私保护**: phone_number字段根据登录状态智能脱敏
- **图片信息**: 每个车辆包含关联的图片列表，按顺序排列

### 2. 获取车辆详情
- **接口**: `GET /api/vehicles/:vehicleId`
- **描述**: 根据车辆ID获取详细信息
- **请求参数**: 
  - `vehicleId`: 路径参数，车辆编号（必填）
- **请求头**: `Authorization: Bearer <token>` (可选，用于获取完整手机号)
- **响应数据**:
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": {
      "id": 1,
      "vehicle_id": "ABC123",
      "vehicle_type": 1,
      "vehicle_status": 1,
      "page_number": 1,
      "car_number": "ABC123",
      "car_url": "https://example.com/car/ABC123",
      "car_category": "轿车",
      "car_brand": "丰田",
      "car_model": "凯美瑞",
      "fuel_type": "汽油",
      "seats": "5",
      "engine_volume": "2.5L",
      "transmission": "自动",
      "year": "2020",
      "description": "车况良好，一手车，无事故",
      "price": "25万",
      "current_price": 250000.00,
      "original_price": 280000.00,
      "contact_info": "张先生，车况良好",
      "update_date": "2024-01-01",
      "extra_fields": {
        "mileage": "50000",
        "color": "白色",
        "features": ["天窗", "导航", "倒车影像"]
      },
      "contact_name": "张先生",
      "phone_number": "13******00",
      "created_at": "2024-01-01T00:00:00.000Z",
      "updated_at": "2024-01-01T00:00:00.000Z",
      "images": [
        {
          "id": 1,
          "image_url": "https://example.com/car1.jpg",
          "image_order": 0
        },
        {
          "id": 2,
          "image_url": "https://example.com/car1_2.jpg",
          "image_order": 1
        }
      ],
      "vehicle_type_text": "私家车",
      "vehicle_status_text": "未售"
    }
  }
  ```
- **响应字段说明**:
  - `id`: 数据库自增ID
  - `vehicle_id`: 车辆编号（网站原始编号）
  - `vehicle_type`: 车辆类型（1-5）
  - `vehicle_status`: 车辆状态（1-2）
  - `page_number`: 来源页面编号
  - `car_number`: 车辆编号
  - `car_url`: 车辆详情页URL
  - `car_category`: 车类
  - `car_brand`: 车厂品牌
  - `car_model`: 车型型号
  - `fuel_type`: 燃料类型
  - `seats`: 座位数
  - `engine_volume`: 发动机容积
  - `transmission`: 传动方式
  - `year`: 年份
  - `description`: 车辆描述
  - `price`: 售价（字符串格式）
  - `current_price`: 现价（数字格式）
  - `original_price`: 原价（数字格式）
  - `contact_info`: 联络人资料
  - `update_date`: 更新日期
  - `extra_fields`: 扩展字段（JSON格式）
  - `contact_name`: 联系人姓名
  - `phone_number`: 联系电话（根据登录状态脱敏）
  - `created_at`: 创建时间
  - `updated_at`: 更新时间
  - `images`: 图片数组，按顺序排列
  - `vehicle_type_text`: 车辆类型中文描述
  - `vehicle_status_text`: 车辆状态中文描述
- **隐私保护**: phone_number字段根据登录状态智能脱敏
- **错误码**: 400(车辆ID为空), 404(车辆不存在), 500(服务器错误)

### 3. 获取车辆统计
- **接口**: `GET /api/vehicles/stats`
- **描述**: 获取车辆统计信息
- **请求参数**: 无
- **请求头**: 无
- **响应数据**:
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": {
      "total_vehicles": 20000,
      "vehicle_types": [
        {
          "type": 1,
          "name": "私家车",
          "count": 15000,
          "percentage": 75.0
        },
        {
          "type": 2,
          "name": "客货车",
          "count": 3000,
          "percentage": 15.0
        },
        {
          "type": 3,
          "name": "货车",
          "count": 1500,
          "percentage": 7.5
        },
        {
          "type": 4,
          "name": "电单车",
          "count": 400,
          "percentage": 2.0
        },
        {
          "type": 5,
          "name": "经典车",
          "count": 100,
          "percentage": 0.5
        }
      ],
      "vehicle_status": [
        {
          "status": 1,
          "name": "未售",
          "count": 18000,
          "percentage": 90.0
        },
        {
          "status": 2,
          "name": "已售",
          "count": 2000,
          "percentage": 10.0
        }
      ],
      "top_brands": [
        {
          "brand": "丰田",
          "count": 2500,
          "percentage": 12.5
        },
        {
          "brand": "本田",
          "count": 2000,
          "percentage": 10.0
        },
        {
          "brand": "日产",
          "count": 1800,
          "percentage": 9.0
        },
        {
          "brand": "奔驰",
          "count": 1500,
          "percentage": 7.5
        },
        {
          "brand": "宝马",
          "count": 1200,
          "percentage": 6.0
        }
      ],
      "price_ranges": [
        {
          "range": "0-10万",
          "count": 8000,
          "percentage": 40.0
        },
        {
          "range": "10-20万",
          "count": 6000,
          "percentage": 30.0
        },
        {
          "range": "20-50万",
          "count": 4000,
          "percentage": 20.0
        },
        {
          "range": "50万以上",
          "count": 2000,
          "percentage": 10.0
        }
      ]
    }
  }
  ```
- **响应字段说明**:
  - `total_vehicles`: 总车辆数
  - `vehicle_types`: 车辆类型分布
    - `type`: 类型ID（1-5）
    - `name`: 类型名称
    - `count`: 数量
    - `percentage`: 百分比
  - `vehicle_status`: 车辆状态分布
    - `status`: 状态ID（1-2）
    - `name`: 状态名称
    - `count`: 数量
    - `percentage`: 百分比
  - `top_brands`: 热门品牌（前10名）
    - `brand`: 品牌名称
    - `count`: 数量
    - `percentage`: 百分比
  - `price_ranges`: 价格区间分布
    - `range`: 价格区间
    - `count`: 数量
    - `percentage`: 百分比
- **错误码**: 500(服务器错误)

### 4. 获取精选车辆
- **接口**: `GET /api/vehicles/featured`
- **描述**: 获取精选车辆列表，用于首页推荐展示
- **请求参数**: 无
- **请求头**: `Authorization: Bearer <token>` (可选，用于获取完整手机号)
- **筛选条件**:
  - 车辆类型：私家车（vehicle_type = 1）
  - 年份区间：2017-2025（包含起始年份）
  - 现价区间：15-27万（包含起始价格）
  - 原价有值且大于现价（original_price > current_price）
- **返回数量**: 6条（随机排序）
- **响应数据**:
  ```json
  {
    "code": 200,
    "message": "获取精选车辆成功",
    "data": {
      "vehicles": [
        {
          "id": 1,
          "vehicle_id": "ABC123",
          "vehicle_type": 1,
          "vehicle_status": 1,
          "car_brand": "丰田",
          "car_model": "凯美瑞",
          "year": "2020",
          "fuel_type": "汽油",
          "seats": "5",
          "engine_volume": "2.5L",
          "transmission": "自动",
          "description": "车况良好，一手车",
          "price": "25万",
          "current_price": 250000.00,
          "original_price": 280000.00,
          "contact_name": "张先生",
          "phone_number": "13******00",
          "created_at": "2024-01-01T00:00:00.000Z",
          "images": [
            {
              "id": 1,
              "image_url": "https://example.com/car1.jpg",
              "image_order": 0
            }
          ]
        }
      ],
      "total_count": 6
    }
  }
  ```
- **响应字段说明**: 与车辆列表API相同
- **隐私保护**: phone_number字段根据登录状态智能脱敏
- **随机排序**: 每次请求返回不同的6条记录
- **错误码**: 500(服务器错误)

### 5. 获取最新上架车辆
- **接口**: `GET /api/vehicles/latest`
- **描述**: 获取最新上架车辆列表，用于首页最新推荐展示
- **请求参数**: 无
- **请求头**: `Authorization: Bearer <token>` (可选，用于获取完整手机号)
- **筛选条件**:
  - 年份区间：2017-2025（包含起始年份）
  - 现价区间：15-27万（包含起始价格）
  - 原价有值且大于现价（original_price > current_price）
  - 上架时间：以最新记录时间为基准，往前一个月内
- **返回数量**: 6条（随机排序）
- **响应数据**:
  ```json
  {
    "code": 200,
    "message": "获取最新上架车辆成功",
    "data": {
      "vehicles": [
        {
          "id": 1,
          "vehicle_id": "ABC123",
          "vehicle_type": 1,
          "vehicle_status": 1,
          "car_brand": "丰田",
          "car_model": "凯美瑞",
          "year": "2020",
          "fuel_type": "汽油",
          "seats": "5",
          "engine_volume": "2.5L",
          "transmission": "自动",
          "description": "车况良好，一手车",
          "price": "25万",
          "current_price": 250000.00,
          "original_price": 280000.00,
          "contact_name": "张先生",
          "phone_number": "13******00",
          "created_at": "2024-01-01T00:00:00.000Z",
          "images": [
            {
              "id": 1,
              "image_url": "https://example.com/car1.jpg",
              "image_order": 0
            }
          ]
        }
      ],
      "total_count": 6
    }
  }
  ```
- **响应字段说明**: 与车辆列表API相同
- **隐私保护**: phone_number字段根据登录状态智能脱敏
- **随机排序**: 每次请求返回不同的6条记录
- **时间计算**: 以数据库中最新记录的创建时间为基准，往前推30天
- **错误码**: 500(服务器错误)

### 6. 获取汽车品牌列表
- **接口**: `GET /api/vehicles/brands`
- **描述**: 获取所有汽车品牌列表，供前端下拉选择使用
- **请求参数**: 无
- **请求头**: 无
- **响应数据**:
  ```json
  {
    "code": 200,
    "message": "获取品牌列表成功",
    "data": {
      "total_brands": 50,
      "brands": [
        {
          "brand": "丰田",
          "count": 2500,
          "label": "丰田 (2500辆)"
        },
        {
          "brand": "本田",
          "count": 2000,
          "label": "本田 (2000辆)"
        },
        {
          "brand": "日产",
          "count": 1800,
          "label": "日产 (1800辆)"
        },
        {
          "brand": "奔驰",
          "count": 1500,
          "label": "奔驰 (1500辆)"
        },
        {
          "brand": "宝马",
          "count": 1200,
          "label": "宝马 (1200辆)"
        }
      ]
    }
  }
  ```
- **响应字段说明**:
  - `total_brands`: 品牌总数
  - `brands`: 品牌数组
    - `brand`: 品牌名称
    - `count`: 该品牌车辆数量
    - `label`: 显示标签（品牌名+数量，用于前端下拉框显示）
- **排序规则**: 按车辆数量降序排列，数量相同时按品牌名升序
- **错误码**: 500(服务器错误)

### 7. 获取特价车辆
- **接口**: `GET /api/vehicles/special-offers`
- **描述**: 获取特价车辆列表，专门推荐7座高性价比车辆
- **请求参数**: 无
- **请求头**: `Authorization: Bearer <token>` (可选，用于获取完整手机号)
- **筛选条件**:
  - 座位数：7座车辆（seats字段包含"7"）
  - 价格限制：current_price不超过40000
  - 年份限制：2010年或以后的车辆
  - 排序：按价格降序（价格高的优先）
- **返回数量**: 10条（从前20个价格最高的车辆中随机筛选）
- **缓存机制**: 每日缓存，当天返回相同数据，次日自动更新
- **响应数据**:
  ```json
  {
    "code": 200,
    "message": "查询成功",
    "data": {
      "vehicles": [
        {
          "id": 1,
          "vehicle_id": "ABC123",
          "vehicle_type": 1,
          "vehicle_status": 1,
          "car_brand": "本田",
          "car_model": "奥德赛",
          "year": "2018",
          "fuel_type": "汽油",
          "seats": "7",
          "engine_volume": "2.4L",
          "transmission": "自动",
          "description": "7座商务车，家用首选",
          "price": "3.8万",
          "current_price": 38000.00,
          "original_price": 45000.00,
          "contact_name": "李先生",
          "phone_number": "13******88",
          "created_at": "2024-01-01T00:00:00.000Z",
          "images": [
            {
              "id": 1,
              "image_url": "https://example.com/car1.jpg",
              "image_order": 0
            }
          ]
        }
      ],
      "total_count": 10,
      "cache_date": "2024-01-15"
    }
  }
  ```
- **响应字段说明**: 与车辆列表API相同，额外包含：
  - `cache_date`: 缓存生成日期
- **隐私保护**: phone_number字段根据登录状态智能脱敏
- **缓存策略**: 
  - 每天第一次请求生成缓存数据
  - 当天所有请求返回相同的10条车辆
  - 零点后自动清除缓存，重新生成
  - 缓存命中时返回消息为"查询成功（缓存数据）"
- **特价标准**: 
  - 7座车辆（适合家庭使用）
  - 价格不超过40000（高性价比）
  - 2010年或以后的车辆（相对较新）
  - 按价格降序排列（价格高的优先）
- **错误码**: 500(服务器错误)

## 🛡️ 隐私保护说明

### 手机号脱敏策略
为了保护用户隐私，车辆信息中的`phone_number`字段采用智能脱敏策略：

- **未登录用户**: `13******89` (首尾2位+中间*)
- **已登录用户**: `13800138000` (完整号码)
- **Token过期**: 按未登录用户处理
- **性能影响**: 毫秒级完成，不影响查询性能

### 脱敏示例
- 原始号码: `13800138000`
- 脱敏后: `13******00`
- 保留规则: 前2位 + 后2位，中间用*替代

## 📊 响应格式

### 成功响应
```json
{
  "code": 200,
  "message": "操作成功",
  "data": {...}
}
```

### 错误响应
```json
{
  "code": 400,
  "message": "错误描述",
  "data": null
}
```

### 状态码说明
- `200`: 成功
- `201`: 创建成功
- `400`: 参数错误
- `401`: 未授权
- `403`: 禁止访问
- `404`: 资源不存在
- `500`: 服务器错误

## 🔧 测试接口

### 服务器状态测试
- **接口**: `GET /api/test`
- **描述**: 测试服务器是否正常运行
- **响应**: 时间戳和服务器信息

## 📝 使用示例

### 1. 完整注册流程
```bash
# 1. 获取验证码
GET /api/captcha

# 2. 用户注册（中国大陆手机号示例）
POST /api/auth/register
Content-Type: application/json

{
  "username": "testuser",
  "password": "123456",
  "real_name": "测试用户",
  "email": "test@example.com",
  "gender": "male",
  "phone": "13800138000",
  "captcha": "1234",
  "captchaId": "abc123"
}

# 3. 用户注册（香港手机号示例）
POST /api/auth/register
Content-Type: application/json

{
  "username": "hkuser",
  "password": "123456",
  "real_name": "香港用户",
  "email": "hk@example.com",
  "gender": "female",
  "phone": "98765432",
  "captcha": "5678",
  "captchaId": "def456"
}
```

### 4. 车辆查询对比
```bash
# 未登录查询（手机号脱敏）
GET /api/vehicles?page=1&limit=5
# 响应: phone_number: "13******00"

# 已登录查询（完整手机号）
GET /api/vehicles?page=1&limit=5
Authorization: Bearer <your_jwt_token>
# 响应: phone_number: "13800138000"
```

### 5. 品牌查询示例
```bash
# 1. 获取品牌列表
GET /api/vehicles/brands
# 响应: 返回所有品牌，如 "丰田", "本田" 等

# 2. 按品牌精确查询（推荐）
GET /api/vehicles?car_brand=exact:丰田&page=1&limit=10
# 只查询丰田品牌的车辆

# 3. 按品牌模糊查询
GET /api/vehicles?car_brand=丰田&page=1&limit=10
# 查询包含"丰田"的品牌，如"丰田", "广汽丰田"等
```

### 6. 价格区间查询示例
```bash
# 1. 查询价格在10万到30万之间的车辆
GET /api/vehicles?min_price=100000&max_price=300000&page=1&limit=10

# 2. 查询价格不低于20万的车辆
GET /api/vehicles?min_price=200000&page=1&limit=10

# 3. 查询价格不超过50万的车辆
GET /api/vehicles?max_price=500000&page=1&limit=10

# 4. 组合查询：丰田品牌，价格20-40万，2020年后
GET /api/vehicles?car_brand=exact:丰田&min_price=200000&max_price=400000&year=>2020&page=1&limit=10
```

### 7. 精选车辆查询示例
```bash
# 获取精选车辆（未登录，手机号脱敏）
GET /api/vehicles/featured
# 响应: 返回6条随机精选车辆，手机号脱敏
# 筛选条件: 私家车 + 2017-2025年 + 现价15-27万 + 原价>现价

# 获取精选车辆（已登录，完整手机号）
GET /api/vehicles/featured
Authorization: Bearer <your_jwt_token>
# 响应: 返回6条随机精选车辆，完整手机号
# 筛选条件: 私家车 + 2017-2025年 + 现价15-27万 + 原价>现价
```

### 8. 最新上架车辆查询示例
```bash
# 获取最新上架车辆（未登录，手机号脱敏）
GET /api/vehicles/latest
# 响应: 返回6条随机最新上架车辆，手机号脱敏
# 筛选条件: 所有类型 + 2017-2025年 + 现价15-27万 + 原价>现价 + 一个月内上架

# 获取最新上架车辆（已登录，完整手机号）
GET /api/vehicles/latest
Authorization: Bearer <your_jwt_token>
# 响应: 返回6条随机最新上架车辆，完整手机号
# 筛选条件: 所有类型 + 2017-2025年 + 现价15-27万 + 原价>现价 + 一个月内上架
```

### 9. 特价车辆查询示例
```bash
# 获取特价车辆（未登录，手机号脱敏）
GET /api/vehicles/special-offers
# 响应: 返回10条7座特价车辆，手机号脱敏
# 筛选条件: 7座 + 价格≤4万 + 按年份降序 + 随机筛选
# 缓存: 当天首次请求生成缓存，后续请求返回相同数据

# 获取特价车辆（已登录，完整手机号）
GET /api/vehicles/special-offers
Authorization: Bearer <your_jwt_token>
# 响应: 返回10条7座特价车辆，完整手机号
# 筛选条件: 7座 + 价格≤4万 + 按年份降序 + 随机筛选
# 缓存: 当天首次请求生成缓存，后续请求返回相同数据

# 特价车辆响应示例（缓存命中）
# HTTP 200 OK
# {
#   "code": 200,
#   "message": "查询成功（缓存数据）",
#   "data": {
#     "vehicles": [...],
#     "total_count": 10,
#     "cache_date": "2024-01-15"
#   }
# }
```

## 📋 数据字段说明

### 用户字段
- `username`: 用户名（用作登录）
- `password`: 密码（加密存储）
- `real_name`: 联络人姓名
- `email`: 邮箱（客户信息，可选）
- `gender`: 性别（male/female/other）
- `phone`: 联络电话
- `region`: 地区（根据IP自动获取）
- `ip_address`: 注册时的IP地址
- `avatar`: 头像URL（可选）
- `status`: 用户状态（1=正常, 2=禁用, 3=待验证）
- `role`: 用户角色（1=普通用户, 2=管理员, 3=超级管理员）
- `last_login_at`: 最后登录时间
- `last_login_ip`: 最后登录IP

### 车辆字段
- `vehicle_id`: 车辆编号（网站原始编号）
- `vehicle_type`: 车辆类型（1-5）
- `vehicle_status`: 车辆状态（1=未售, 2=已售）
- `car_brand`: 车厂品牌
- `car_model`: 车型型号
- `year`: 年份
- `price`: 售价
- `current_price`: 现价（数字格式）
- `contact_name`: 联系人姓名
- `phone_number`: 联系电话（支持脱敏）

---

**注意**: 本API文档适用于汽车信息服务器 v1.0.0 版本