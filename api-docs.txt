# Car Server API 文档

## 基础信息
- 基础URL: http://localhost:3000
- 认证方式: JWT Token (Bearer Token)
- 响应格式: JSON

## 认证相关接口

### 用户注册
- **接口**: POST /api/auth/register
- **描述**: 用户注册
- **请求参数**:
  - username: 字符串，必填，用户名
  - password: 字符串，必填，密码
  - email: 字符串，可选，邮箱
  - phone: 字符串，必填，联系电话
  - real_name: 字符串，必填，真实姓名
  - gender: 字符串，必填，性别 (male/female/other)
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 返回数据
- **错误码**:
  - 400: 参数错误
  - 409: 用户名已存在
  - 500: 服务器错误

### 用户登录
- **接口**: POST /api/auth/login
- **描述**: 用户登录
- **请求参数**:
  - username: 字符串，必填，用户名
  - password: 字符串，必填，密码
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 包含token的用户信息
- **错误码**:
  - 400: 参数错误
  - 401: 用户名或密码错误
  - 500: 服务器错误

### 获取用户信息
- **接口**: GET /api/auth/me
- **描述**: 获取当前登录用户信息
- **认证**: 需要JWT Token
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 用户信息
- **错误码**:
  - 401: 未认证
  - 500: 服务器错误

### 用户登出
- **接口**: POST /api/auth/logout
- **描述**: 用户登出
- **认证**: 需要JWT Token
- **响应**:
  - code: 状态码
  - message: 描述信息
- **错误码**:
  - 401: 未认证
  - 500: 服务器错误

## 车辆相关接口

### 获取车辆列表
- **接口**: GET /api/vehicles
- **描述**: 获取车辆列表
- **请求参数**:
  - page: 数字，可选，页码 (默认1)
  - limit: 数字，可选，每页数量 (默认20)
  - vehicle_type: 数字，可选，车辆类型
  - car_brand: 字符串，可选，车厂
  - car_model: 字符串，可选，车型
  - year: 字符串，可选，年份
  - min_price: 数字，可选，最低价格
  - max_price: 数字，可选，最高价格
  - seats: 字符串，可选，座位数量
  - sort_by: 字符串，可选，排序字段 (created_at/updated_at/current_price/year)
  - sort_order: 字符串，可选，排序方向 (ASC/DESC)
- **座位数量查询说明**:
  - 精确匹配: "5", "7" (前端传入纯数字，只支持这两种格式)
- **性能优化**:
  - 使用精确匹配OR条件，充分利用座位索引
  - 座位搜索时优先使用座位索引排序
  - 座位搜索时减少查询字段和图片数量
  - 支持复合索引优化（座位+价格、座位+品牌）
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 车辆列表和分页信息
- **错误码**:
  - 500: 服务器错误

### 获取车辆详情
- **接口**: GET /api/vehicles/:vehicleId
- **描述**: 获取车辆详细信息
- **请求参数**:
  - vehicleId: 字符串，必填，车辆ID
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 车辆详细信息
- **错误码**:
  - 404: 车辆不存在
  - 500: 服务器错误

### 获取精选车辆
- **接口**: GET /api/vehicles/featured
- **描述**: 获取精选车辆列表
- **认证**: 可选 (登录用户可查看完整手机号)
- **请求参数**: 无
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 精选车辆列表
- **错误码**:
  - 500: 服务器错误

### 获取最新上架车辆
- **接口**: GET /api/vehicles/latest
- **描述**: 获取最新上架的车辆列表
- **认证**: 可选 (登录用户可查看完整手机号)
- **请求参数**: 无
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 最新车辆列表
- **错误码**:
  - 500: 服务器错误

### 获取特价车辆
- **接口**: GET /api/vehicles/special-offers
- **描述**: 获取特价车辆列表，包含豪华品牌特价车和7座丰田/本田车辆
- **认证**: 可选 (登录用户可查看完整手机号)
- **请求参数**: 无
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 特价车辆数据
    - vehicles: 车辆列表 (最多15辆：10辆豪华品牌 + 5辆7座车)
    - cache_date: 缓存日期
    - total_count: 总数量
    - luxury_count: 豪华品牌车辆数量
    - seven_seater_count: 7座车辆数量
- **特价车辆筛选条件**:
  - 豪华品牌车辆 (10辆):
    - 品牌: 平治、寶馬、保時捷、奧迪、特斯拉、凌志、越野路華等豪华品牌
    - 价格: ≤40000港币
    - 年份: ≥2010年
    - 选择策略: 按价格降序、年份降序，确保品牌多样性
  - 7座车辆 (5辆):
    - 品牌: 豐田 TOYOTA、本田 HONDA
    - 座位数: 7座
    - 价格: ≤40000港币
    - 年份: ≥2010年
    - 选择策略: 按价格降序、年份降序，确保品牌多样性
- **缓存机制**: 每日更新，基于日期种子确保结果稳定
- **错误码**:
  - 500: 服务器错误

### 获取车辆统计信息
- **接口**: GET /api/vehicles/stats
- **描述**: 获取车辆统计信息
- **请求参数**: 无
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 统计数据
- **错误码**:
  - 500: 服务器错误

### 获取汽车品牌列表
- **接口**: GET /api/vehicles/brands
- **描述**: 获取所有汽车品牌列表，按车辆数量降序排列
- **请求参数**: 无
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 品牌列表数据
- **错误码**:
  - 500: 服务器错误

### 批量更新车辆信息
- **接口**: POST /api/vehicles/batch-update
- **描述**: 批量更新车辆信息，支持增量更新，不影响图片表
- **请求参数**:
  - updates: 数组，必填，包含更新数据
    - vehicle_id: 字符串，必填，车辆唯一标识
    - fields: 对象，必填，需要更新的字段
      - vehicle_type: 数字，可选，车辆类型
      - vehicle_status: 数字，可选，车辆状态
      - page_number: 数字，可选，来源页面编号
      - car_number: 字符串，可选，车辆编号
      - car_url: 字符串，可选，车辆详情页URL
      - car_category: 字符串，可选，车类
      - car_brand: 字符串，可选，车厂
      - car_model: 字符串，可选，型号
      - fuel_type: 字符串，可选，燃料类型
      - seats: 字符串，可选，座位数
      - engine_volume: 字符串，可选，发动机容积
      - transmission: 字符串，可选，传动方式
      - year: 字符串，可选，年份
      - description: 字符串，可选，简评/描述
      - price: 字符串，可选，售价
      - current_price: 数字，可选，现价（数字格式）
      - original_price: 数字，可选，原价（数字格式）
      - contact_info: 字符串，可选，联络人资料
      - update_date: 字符串，可选，更新日期
      - extra_fields: 对象，可选，扩展字段（JSON格式）
      - contact_name: 字符串，可选，联系人姓名
      - phone_number: 字符串，可选，联系电话
      - is_special_offer: 数字，可选，是否特价车辆
- **请求示例**:
```json
{
  "updates": [
    {
      "vehicle_id": "ABC123",
      "fields": {
        "price": "150,000",
        "current_price": 150000.00,
        "vehicle_status": 2,
        "description": "更新后的描述"
      }
    },
    {
      "vehicle_id": "DEF456",
      "fields": {
        "price": "200,000",
        "is_special_offer": 1
      }
    }
  ]
}
```
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 更新结果
    - total_processed: 总处理数量
    - success_count: 成功更新数量
    - error_count: 失败数量
    - errors: 错误详情数组（如果有错误）
- **性能优化**:
  - 临时禁用外键检查以提升批量更新性能
  - 事务控制确保数据一致性
  - 增量更新，只更新传入的字段
  - 自动清除相关缓存
- **错误码**:
  - 400: 参数错误或车辆ID不存在
  - 500: 服务器错误

## 车辆发布管理接口

### 发布车辆
- **接口**: POST /api/vehicles/publish
- **描述**: 发布车辆（包含图片上传）
- **认证**: 需要JWT Token
- **请求类型**: multipart/form-data
- **请求参数**:
  - car_brand: 字符串，必填，车辆品牌
  - car_model: 字符串，必填，车辆型号
  - year: 字符串，必填，年份 (格式：YYYY)
  - price: 字符串，必填，价格 (支持数字和中文)
  - contact_name: 字符串，必填，联系人姓名
  - phone_number: 字符串，必填，联系电话 (支持大陆11位或香港8位)
  - vehicle_type: 数字，可选，车辆类型 (1=私家车, 2=客货车, 3=货车, 4=电单车, 5=经典车)
  - fuel_type: 字符串，可选，燃料类型
  - seats: 字符串，可选，座位数
  - engine_volume: 字符串，可选，发动机容积
  - transmission: 字符串，可选，传动方式
  - description: 字符串，可选，车辆描述
  - publish_status: 数字，可选，发布状态 (1=已发布, 2=草稿, 3=下架)
  - images: 文件数组，可选，车辆图片 (最多10张，每张最大5MB)
- **支持的图片格式**: JPEG, JPG, PNG, WEBP
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 发布结果
    - vehicle: 车辆基本信息
    - images: 图片信息数组
    - image_count: 图片数量
- **响应示例**:
```json
{
  "code": 200,
  "message": "车辆发布成功",
  "data": {
    "vehicle": {
      "id": 1,
      "vehicle_id": "u1_v1234567890_123",
      "car_brand": "丰田",
      "car_model": "卡罗拉",
      "year": "2020",
      "price": "15万",
      "current_price": 150000.00,
      "publish_status": 1,
      "created_at": "2025-09-13T16:30:00.000Z"
    },
    "images": [
      {
        "id": 1,
        "image_url": "/uploads/vehicles/2025-09-13/1234567890_123_processed.jpg",
        "thumbnail_url": "/uploads/vehicles/2025-09-13/1234567890_123_thumb.jpg",
        "image_order": 0,
        "width": 1920,
        "height": 1080,
        "size": 204800
      }
    ],
    "image_count": 1
  }
}
```
- **错误码**:
  - 400: 参数验证失败
  - 401: 未认证
  - 413: 文件大小超过限制
  - 415: 不支持的文件类型
  - 500: 服务器错误

### 保存车辆草稿
- **接口**: POST /api/vehicles/draft
- **描述**: 保存车辆草稿（无需图片）
- **认证**: 需要JWT Token
- **请求参数**:
  - car_brand: 字符串，必填，车辆品牌
  - 其他参数均为可选
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 草稿信息
- **错误码**:
  - 400: 参数错误
  - 401: 未认证
  - 500: 服务器错误

### 获取我的车辆列表
- **接口**: GET /api/vehicles/my-vehicles
- **描述**: 获取当前用户发布的车辆列表
- **认证**: 需要JWT Token
- **请求参数**:
  - page: 数字，可选，页码 (默认1)
  - limit: 数字，可选，每页数量 (默认20)
  - publish_status: 数字，可选，筛选发布状态 (1=已发布, 2=草稿, 3=下架)
  - vehicle_type: 数字，可选，筛选车辆类型
  - sort_by: 字符串，可选，排序字段 (默认created_at)
  - sort_order: 字符串，可选，排序方向 (ASC/DESC，默认DESC)
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 车辆列表和分页信息
    - vehicles: 车辆数组
    - pagination: 分页信息
- **响应示例**:
```json
{
  "code": 200,
  "message": "获取成功",
  "data": {
    "vehicles": [
      {
        "id": 1,
        "vehicle_id": "u1_v1234567890_123",
        "car_brand": "丰田",
        "car_model": "卡罗拉",
        "year": "2020",
        "price": "15万",
        "current_price": 150000.00,
        "publish_status": 1,
        "created_at": "2025-09-13T16:30:00.000Z",
        "images": [
          {
            "id": 1,
            "image_url": "/uploads/vehicles/2025-09-13/1234567890_123_processed.jpg",
            "thumbnail_url": "/uploads/vehicles/2025-09-13/1234567890_123_thumb.jpg",
            "image_order": 0
          }
        ]
      }
    ],
    "pagination": {
      "current_page": 1,
      "per_page": 20,
      "total": 1,
      "total_pages": 1
    }
  }
}
```
- **错误码**:
  - 401: 未认证
  - 500: 服务器错误

### 更新车辆信息
- **接口**: PUT /api/vehicles/:vehicleId
- **描述**: 更新车辆信息
- **认证**: 需要JWT Token
- **请求参数**:
  - vehicleId: 路径参数，车辆ID
  - 更新字段对象（支持发布接口中的所有字段）
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 更新后的车辆信息
- **错误码**:
  - 400: 参数错误
  - 401: 未认证
  - 403: 无权限操作
  - 404: 车辆不存在
  - 500: 服务器错误

### 删除车辆
- **接口**: DELETE /api/vehicles/:vehicleId
- **描述**: 删除车辆（会级联删除相关图片）
- **认证**: 需要JWT Token
- **请求参数**:
  - vehicleId: 路径参数，车辆ID
- **响应**:
  - code: 状态码
  - message: 描述信息
- **错误码**:
  - 401: 未认证
  - 403: 无权限操作
  - 404: 车辆不存在
  - 500: 服务器错误

### 为车辆添加图片
- **接口**: POST /api/vehicles/:vehicleId/images
- **描述**: 为现有车辆添加图片
- **认证**: 需要JWT Token
- **请求类型**: multipart/form-data
- **请求参数**:
  - vehicleId: 路径参数，车辆ID
  - images: 文件数组，图片文件
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 图片处理结果
- **错误码**:
  - 401: 未认证
  - 403: 无权限操作
  - 404: 车辆不存在
  - 413: 文件大小超过限制
  - 415: 不支持的文件类型
  - 500: 服务器错误

## 图片处理说明

### 自动处理功能
1. **图片压缩**: 自动压缩上传的图片，保持画质的同时减小文件大小
2. **缩略图生成**: 自动生成300x300像素的缩略图
3. **格式转换**: 自动优化图片格式
4. **尺寸调整**: 大图片会自动调整到合适的尺寸（最大1920x1080）

### 文件存储规则
1. **目录结构**: `/uploads/vehicles/YYYY-MM-DD/`
2. **文件命名**: `时间戳_随机数.扩展名`
3. **处理文件**: `原文件名_processed.扩展名`
4. **缩略图**: `原文件名_thumb.扩展名`

### 文件限制
- **最大文件大小**: 5MB
- **最大文件数量**: 10个
- **支持格式**: JPEG, JPG, PNG, WEBP
- **图片尺寸**: 自动调整，最大1920x1080

## 访客统计接口

### 获取访客统计数据
- **接口**: GET /api/visitors/stats
- **描述**: 获取访客统计数据
- **认证**: 需要JWT Token (管理员权限)
- **请求参数**:
  - startDate: 字符串，可选，开始日期 (YYYY-MM-DD)
  - endDate: 字符串，可选，结束日期 (YYYY-MM-DD)
  - limit: 数字，可选，限制返回条数 (默认30)
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 统计数据数组
  - total: 总条数
- **错误码**:
  - 401: 未认证
  - 403: 权限不足
  - 500: 服务器错误

### 获取今日访客统计
- **接口**: GET /api/visitors/today
- **描述**: 获取今日访客统计
- **认证**: 需要JWT Token (管理员权限)
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 今日统计数据
- **错误码**:
  - 401: 未认证
  - 403: 权限不足
  - 500: 服务器错误

### 获取访客详情列表
- **接口**: GET /api/visitors/details
- **描述**: 获取访客详情列表
- **认证**: 需要JWT Token (管理员权限)
- **请求参数**:
  - date: 字符串，可选，查询日期 (YYYY-MM-DD)
  - page: 数字，可选，页码 (默认1)
  - pageSize: 数字，可选，每页大小 (默认20)
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 访客详情和分页信息
- **错误码**:
  - 401: 未认证
  - 403: 权限不足
  - 500: 服务器错误

### 手动记录访客访问
- **接口**: POST /api/visitors/record
- **描述**: 手动记录访客访问（用于测试）
- **认证**: 需要JWT Token (管理员权限)
- **请求参数**:
  - ipAddress: 字符串，必填，IP地址
  - userAgent: 字符串，可选，用户代理信息
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 记录结果
- **错误码**:
  - 400: 参数错误
  - 401: 未认证
  - 403: 权限不足
  - 500: 服务器错误

## 其他接口

### 获取验证码
- **接口**: GET /api/captcha
- **描述**: 获取图片验证码
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 验证码信息
- **错误码**:
  - 500: 服务器错误

### 测试接口
- **接口**: GET /api/test
- **描述**: 测试接口
- **响应**:
  - code: 状态码
  - message: 描述信息
  - data: 测试数据
- **错误码**:
  - 500: 服务器错误

## 响应格式说明

### 成功响应
```json
{
  "code": 200,
  "message": "操作成功",
  "data": {}
}
```

### 错误响应
```json
{
  "code": 400,
  "message": "错误描述",
  "error": "详细错误信息"
}
```

## 权限说明
- 普通用户 (role=1): 可以访问车辆相关接口
- 管理员 (role=2): 可以访问所有接口，包括访客统计
- 超级管理员 (role=3): 拥有最高权限

## 注意事项
1. 所有需要认证的接口都需要在请求头中携带 `Authorization: Bearer <token>`
2. 访客统计功能会自动记录所有请求的访客信息，无需手动调用
3. 访客统计接口只有管理员可以访问
4. 同一IP在同一天内多次访问只算作一个访客，但会累计请求次数
